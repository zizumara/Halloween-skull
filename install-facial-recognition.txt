1. Update Pi O/S (Buster).
sudo apt-get update
sudo apt-get dist-upgrade

2. Use raspi-config Advanced menu to expand file system and reboot.

3. Install dependencies.
sudo apt-get install build-essential cmake pkg-config
sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng-dev
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt-get install libxvidcore-dev libx264-dev
sudo apt-get install libfontconfig1-dev libcairo2-dev
sudo apt-get install libgdk-pixbuf2.0-dev libpango1.0-dev
sudo apt-get install libgtk2.0-dev libgtk-3-dev
sudo apt-get install libatlas-base-dev gfortran
sudo apt-get install libhdf5-dev libhdf5-serial-dev libhdf5-103
sudo apt-get install libqtgui4 libqtwebkit4 libqt4-test python3-pyqt5
sudo apt-get install python3-dev

4. Create Python virtual environment and install NumPy.
wget https://bootstrap.pypa.io/get-pip.py
sudo python3 get-pip.py
sudo rm -rf ~/.cache/pip
sudo pip install virtualenv virtualenvwrapper
nano ~/.bashrc
Add the following to the end of .bashrc:
  export WORKON_HOME=$HOME/.virtualenvs
  export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
  source /usr/local/bin/virtualenvwrapper.sh
Save with CTL-O, ENTER. and then exit with CTL-X.
source ~/.bashrc
mkvirtualenv cv -p python3 --system-site-packages
pip install "picamera[array]"

5. Compile OpenCV from source.
cd ~
wget -O opencv.zip https://github.com/opencv/opencv/archive/4.1.1.zip
wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.1.1.zip
unzip opencv.zip
unzip opencv_contrib.zip
mv opencv-4.1.1 opencv
mv opencv_contrib-4.1.1 opencv_contrib
sudo nano /etc/dphys-swapfile
Change CONF_SWAPSIZE=100 to CONF_SWAPSIZE=2048.
Save with CTL-O, ENTER. and then exit with CTL-X.
sudo /etc/init.d/dphys-swapfile stop
sudo /etc/init.d/dphys-swapfile start
workon cv
pip install numpy
cd ~/opencv
mkdir build
cd build
cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
-D ENABLE_NEON=ON \
-D ENABLE_VFPV3=ON \
-D BUILD_TESTS=OFF \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D OPENCV_ENABLE_NONFREE=ON \
-D CMAKE_SHARED_LINKER_FLAGS=-latomic \
-D BUILD_EXAMPLES=OFF ..
The following command will compile OpenCV from source.  It may take hours to complete:
make -j4

6. Install OpenCV.
sudo make install
sudo ldconfig

7. Restore swap file size.
sudo nano /etc/dphys-swapfile
Change CONF_SWAPSIZE=2048 to CONF_SWAPSIZE=100.
Save with CTL-O, ENTER. and then exit with CTL-X.
sudo /etc/init.d/dphys-swapfile stop
sudo /etc/init.d/dphys-swapfile start

8. Add sym links to OpenCV (use appropriate latest python3 version; check paths).
cd /usr/local/lib/python3.7/site-packages/cv2/python-3.7
sudo mv cv2.cpython-37m-arm-linux-gnueabihf.so cv2.so
cd ~/.virtualenvs/cv/lib/python3.7/site-packages/
ln -s /usr/local/lib/python3.7/site-packages/cv2/python-3.7/cv2.so cv2.so

9. Test OpenCV installation.
cd ~
workon cv
python
>>> import cv2
>>> cv2.__version__
'4.1.1'
>>>
(use CTL-D to exit python)

10. Install required Python modules.
pip install numpy scipy imutils